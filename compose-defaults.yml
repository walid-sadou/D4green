#
# Copyright IBM Corp. All Rights Reserved.
# Unauthorized copying/modification of this file, via any medium is strictly prohibited
# Proprietary and confidential
#
version: '2.1'

services:

  ca-dev:
    image: hyperledger/fabric-ca:x86_64-1.0.1
    # REMOVE FABRIC-CA-SERVER.DB ON EACH START TO BE SYNC WITH COUCHDB-DEV CLEAN ON STARTUP
    command: sh -c 'sleep 1 && rm /.fabric-ca/fabric-ca-server.db ; fabric-ca-server init -b WebAppAdmin:DJY27pEnl16d && fabric-ca-server start --ca.certfile /.fabric-ca/$$CA_CERTIFICATE --ca.keyfile /.fabric-ca/$$CA_KEY_CERTIFICATE -c /.fabric-ca/fabric-ca-server-config.yaml -d'

  ca:
    image: hyperledger/fabric-ca:x86_64-1.0.1
    command: sh -c 'sleep 1 && fabric-ca-server init -b WebAppAdmin:DJY27pEnl16d && fabric-ca-server start --ca.certfile /.fabric-ca/$$CA_CERTIFICATE --ca.keyfile /.fabric-ca/$$CA_KEY_CERTIFICATE -c /.fabric-ca/fabric-ca-server-config.yaml -d'

  zookeeper:
    image: hyperledger/fabric-zookeeper:86_64-1.0.2

  orderer-solo-file:
    image: hyperledger/fabric-orderer:x86_64-1.0.1
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LEDGERTYPE=file
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/fabric/orderer/orderer.block
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/fabric/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/fabric/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/fabric/orderer/tls/server.crt
      - ORDERER_FILELEDGER_LOCATION=/var/hyperledger/production/orderer
      - BASE_DOCKER_NS=hyperledger
      - DOCKER_NS=hyperledger
      - ARCH=x86_64
      - PROJECT_VERSION=1.0.1
      - BASE_VERSION=0.3.1

  orderer-solo-ram:
    image: hyperledger/fabric-orderer:x86_64-1.0.1
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/fabric/orderer/orderer.block
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/fabric/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/fabric/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/fabric/orderer/tls/server.crt
      - BASE_DOCKER_NS=hyperledger
      - DOCKER_NS=hyperledger
      - ARCH=x86_64
      - PROJECT_VERSION=1.0.1
      - BASE_VERSION=0.3.1

  couchdb-dev:
    image: hyperledger/fabric-couchdb:x86_64-0.4.6
    # image: mffrench/couchdb:standalone_2.0.0.64
    # environment:
    #  - CLEAN_DB_ON_STARTUP=true

  couchdb:
    image: hyperledger/fabric-couchdb:x86_64-0.4.6
    # image: mffrench/couchdb:standalone_2.0.0

  peer:
    image: hyperledger/fabric-peer:x86_64-1.0.1
    # image: mffrench/fabric-peer:x86_64-1.0.1-nc
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c 'echo "Sleep 20 sec waiting CouchDB"; sleep 20; peer node start --peer-defaultchain=false'
    environment:
      # - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=INFO
      - CORE_NEXT=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_REQUESTTIMEOUT=240000
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      # - CORE_PEER_GOSSIP_IGNORESECURITY=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric/peer
      - BASE_DOCKER_NS=hyperledger
      - DOCKER_NS=hyperledger
      - ARCH=x86_64
      - PROJECT_VERSION=1.0.1
      - BASE_VERSION=0.3.1

  server_build:
    build: njserver
    image: greffe_server
    command: bash -c "cat chaincodeId || (grunt build && echo 'Sleep 20 sec waiting fabric infra to be ready'; sleep 20; npm run deploy;) && grunt"
    environment:
      - COUCHDB_RETRY_COUNT=20
      - COUCHDB_RETRY_SLEEP=6
      - COUCHDB_BIG_RECEIVE_SIZE_ON_VIEW=1000000

#  server_image:
#     image: blockicker_server
#     command: bash -c "cat chaincodeId || (grunt build && echo 'Sleep 20 sec waiting fabric infra to be ready'; sleep 20; npm run deploy;) && grunt"
#     environment:
#       - GOPATH=/usr/src/gocc
      # HUGE TIMEOUT FOR HUGE DATA PAYLOAD
#       - TXTIMEOUT=14400000
#       - INIT_DATA_TIMEOUT=6000
#       - FILE_DMZ_UPLOAD_TARGET_PATH=/var/lib/blockicker/dmz_uploads
#       - FILE_VPN_UPLOAD_TARGET_PATH=/var/lib/blockicker/vpn_uploads
#       - EXPORT_DIR_PATH=/var/lib/blockicker/vpn_exports
#       - SPLITCSVSIZE=1000
#       - FIND_BULK_LIMIT=1000
#       - COUCHDB_RETRY_COUNT=20
#       - COUCHDB_RETRY_SLEEP=6
#       - COUCHDB_BIG_RECEIVE_SIZE_ON_VIEW=1000000
#       - UPLOAD_DOC_PATH=/var/lib/blockicker/docs

  client_build:
    build: njsclient
    image: greffe_client_loader
    command: ng serve --env=compose --host 0.0.0.0

 #  client_image:
 #    image: blockicker_client
 #    command: ng serve --env=compose --host 0.0.0.0
